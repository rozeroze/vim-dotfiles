*dungeon-brave.jax*		DungeonKeeper On Vim

Author: rozeroze <rosettastone1886@gmail.com>
License: MIT
Version: 2018-07-25

						*dungeon-brave*
dungeon.vimで登場するbrave各種について

|dungeon|			当VimPluginについて
|dungeon-monster|		登場するmonsterについて

==============================================================================
CONTENTS					*dungeon-brave-contents*




==============================================================================

         \ 'fighter':  { 'icon': 'F', 'type': 'brave', 'life': 4, 'mana': 5, 'hate': 0, 'action': s:action.fighter },
         \ 'sword':    { 'icon': 'S', 'type': 'brave', 'life': 5, 'mana': 5, 'hate': 0, 'action': s:action.sword },
         \ 'bishop':   { 'icon': 'B', 'type': 'brave', 'life': 3, 'mana': 5, 'hate': 0, 'action': s:action.bishop },
         \ 'kid':      { 'icon': 'K', 'type': 'brave', 'life': 1, 'mana': 4, 'hate': 0, 'action': s:action.kid },
         \ 'lancer':   { 'icon': 'L', 'type': 'brave', 'life': 6, 'mana': 8, 'hate': 0, 'action': s:action.lancer },
         \ 'tamer':    { 'icon': 'T', 'type': 'brave', 'life': 3, 'mana': 6, 'hate': 1, 'action': s:action.tamer },
         \ 'rook':     { 'icon': 'R', 'type': 'brave', 'life': 3, 'mana': 4, 'hate': 0, 'action': s:action.rook },
         \ 'assassin': { 'icon': 'A', 'type': 'brave', 'life': 3, 'mana': 7, 'hate': 2, 'action': s:action.assassin },
         \ 'wizard':   { 'icon': 'W', 'type': 'brave', 'life': 3, 'mana': 9, 'hate': 0, 'action': s:action.wizard },
         \ 'magician': { 'icon': 'M', 'type': 'brave', 'life': 3, 'mana': 8, 'hate': 1, 'action': s:action.magician },
         \ 'criminal': { 'icon': 'C', 'type': 'brave', 'life': 5, 'mana': 5, 'hate': 6, 'action': s:action.criminal }

" function s:action.{brave}() {{{
function! s:action.fighter() dict
   " priority: attack
   " move: near-enemy
   " attack: 近くの敵を無作為に攻撃
   " skill: none
   call s:message.print('fighter turn')
   if !call(s:action.attack_monster, [], self)
      call call(s:action.move_enemy, [], self)
   endif
endfunction
function! s:action.sword() dict
   call s:message.print('sword turn')
   if !call(s:action.attack_monster, [], self)
      call call(s:action.move_enemy, [], self)
   endif
endfunction
function! s:action.bishop() dict
   call s:message.print('bishop turn')
   if !call(s:action.attack_monster, [], self)
      call call(s:action.move_enemy, [], self)
   endif
endfunction
function! s:action.kid() dict
   call s:message.print('kid turn')
   if !call(s:action.attack_monster, [], self)
      call call(s:action.move_enemy, [], self)
   endif
endfunction
function! s:action.lancer() dict
   call s:message.print('lancer turn')
   if !call(s:action.attack_monster, [], self)
      call call(s:action.move_enemy, [], self)
   endif
endfunction
function! s:action.tamer() dict
   call s:message.print('tamer turn')
   if !call(s:action.attack_monster, [], self)
      call call(s:action.move_enemy, [], self)
   endif
endfunction
function! s:action.rook() dict
   call s:message.print('rook turn')
   if !call(s:action.attack_monster, [], self)
      call call(s:action.move_enemy, [], self)
   endif
endfunction
function! s:action.assassin() dict
   call s:message.print('assassin turn')
   if !call(s:action.attack_monster, [], self)
      call call(s:action.move_enemy, [], self)
   endif
endfunction
function! s:action.wizard() dict
   call s:message.print('wizard turn')
   if !call(s:action.attack_monster, [], self)
      call call(s:action.move_enemy, [], self)
   endif
endfunction
function! s:action.magician() dict
   call s:message.print('magician turn')
   if !call(s:action.attack_monster, [], self)
      call call(s:action.move_enemy, [], self)
   endif
endfunction
function! s:action.criminal() dict
   call s:message.print('criminal turn')
   if !call(s:action.attack_monster, [], self)
      call call(s:action.move_enemy, [], self)
   endif
endfunction
" }}}

==============================================================================
vim: tw=78 ts=8 ft=help norl :
